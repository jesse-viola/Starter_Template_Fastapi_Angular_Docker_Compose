version: "3.8"

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: demo_db
      POSTGRES_USER: demo_user
      POSTGRES_PASSWORD: demo_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U demo_user -d demo_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app:cached    # bind mount source
      - maven-cache:/root/.m2    # cache Maven repo
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/demo_db
      - SPRING_DATASOURCE_USERNAME=demo_user
      - SPRING_DATASOURCE_PASSWORD=demo_pass
      - SPRING_PROFILES_ACTIVE=dev
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  maven-cache:
  postgres_data:
